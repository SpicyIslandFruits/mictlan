name: mictlan

services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: demo_database
      MYSQL_USER: demo_user
      MYSQL_PASSWORD: demo_database_password
    ports:
      - "3306:3306"
    volumes:
      - ../mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

  stg-nbviewer:
    build:
      context: ../
      dockerfile: build/nbviewer/Dockerfile
    volumes:
      - ../web/notebook:/app/web/notebook
      - ../marmaid:/app/marmaid
    command: /app/nbviewer --port 4000

  stg-phpdemo:
    build:
      context: ../
      dockerfile: build/phpdemo/stg.Dockerfile
    volumes:
      - ../web:/var/www/html/web
    # FIXME: chownが必要かどうかわからん
    command: >
      sh -c "
        # composer install --no-dev --optimize-autoloader &&
        # chown -R www-data:www-data /var/www/html &&
        # composer clear-cache &&
        php-fpm
      "

  debug-phpdemo:
    build:
      context: ../
      dockerfile: build/phpdemo/debug.Dockerfile
    volumes:
      - ../web/phpdemo:/var/www/html/web/phpdemo
    ports:
      - "2000:2000" # debugはnginxでプロキシしていないからポートを公開
    extra_hosts:
      - "host.docker.internal:host-gateway" # linuxでhostのxdebugに接続する時必要
    command: > # xdebugサーバーへの接続のタイムアウトあったほうがいい
      sh -c "
        echo 'xdebug.mode=debug,develop' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini &&
        echo 'xdebug.client_host=host.docker.internal' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini &&
        echo 'xdebug.client_port=2001' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini &&
        echo 'xdebug.start_with_request=yes' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini &&
        echo 'xdebug.log=/var/log/xdebug.log' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini &&
        echo 'xdebug.log_level=7' >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini &&
        php -S 0.0.0.0:2000 -t /var/www/html/
      "

  nginx:
    image: nginx:latest
    ports:
      - "3000:80"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - stg-phpdemo

  zrok:
    image: openziti/zrok
    env_file:
      - .env
    user: "${UID}"
    volumes:
      - ${HOME}/.zrok:/.zrok
    environment:
      - PFXLOG_NO_JSON=true
    command: share reserved "${ZROK_SHARE_NAME}" --headless
